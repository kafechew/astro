---
// utils imports
import { slugify, formatDate } from "../js/utils";

// Props with defaults and types
const { 
  category, 
  title, 
  author, 
  date, 
  image,
  description,
  readingTime
} = Astro.props;

// Format date with more details
const formattedDate = formatDate(date);

// Calculate reading time if not provided
const estimatedReadTime = readingTime || '5 min read';

// Check if image is an object or string
const imageSrc = typeof image === 'object' ? image.src : image;
const imageAlt = typeof image === 'object' ? image.alt : `Cover image for ${title}`;
---

<header class="post-header">
  <div class="header-content">
    <div class="header-meta">
      {category && (
        <a href={`/category/${slugify(category)}/`} class="category-badge">
          {category}
        </a>
      )}
    </div>
    
    <h1>{title}</h1>
    
    {description && <p class="post-description">{description}</p>}
    
    <div class="author-info">
      <div class="author-avatar">
        <img
          src={`/images/authors/${slugify(author)}.jpg`}
          alt={`Avatar of ${author}`}
          onerror="this.onerror=null; this.src='/images/authors/default-avatar.jpg';"
        />
      </div>
      <div class="author-meta">
        <div class="author-name">
          <a href={`/author/${slugify(author)}/`}>{author}</a>
        </div>
        <div class="post-meta">
          <span class="post-date">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
            {formattedDate}
          </span>
          <span class="reading-time">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <circle cx="12" cy="12" r="10"></circle>
              <polyline points="12 6 12 12 16 14"></polyline>
            </svg>
            {estimatedReadTime}
          </span>
        </div>
      </div>
    </div>
  </div>
</header>

<div class="featured-image-container">
  <img
    src={imageSrc}
    alt={imageAlt}
    width="1200"
    height="600"
    class="featured-image"
  />
</div>

<style>
  .post-header {
    padding: var(--space-xl) 0;
    text-align: center;
    max-width: 800px;
    margin: 0 auto;
    padding: var(--space-xl) var(--space-md);
  }
  
  .header-meta {
    margin-bottom: var(--space-md);
  }
  
  .category-badge {
    display: inline-block;
    padding: var(--space-xs) var(--space-sm);
    background-color: hsl(var(--accent) / 0.1);
    color: hsl(var(--accent));
    border-radius: var(--radius-full);
    font-size: var(--fs-sm);
    font-weight: 500;
    text-decoration: none;
    transition: background-color var(--transition-ease-fast);
  }
  
  .category-badge:hover {
    background-color: hsl(var(--accent) / 0.2);
    text-decoration: none;
  }
  
  h1 {
    font-size: var(--fs-3xl);
    line-height: 1.2;
    margin-bottom: var(--space-md);
    color: hsl(var(--txt));
  }
  
  .post-description {
    font-size: var(--fs-lg);
    color: hsl(var(--txt) / 0.8);
    line-height: 1.6;
    margin-bottom: var(--space-lg);
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .author-info {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-sm);
  }
  
  .author-avatar {
    width: 48px;
    height: 48px;
    border-radius: var(--radius-full);
    overflow: hidden;
  }
  
  .author-avatar img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .author-meta {
    text-align: left;
  }
  
  .author-name {
    font-weight: 500;
    margin-bottom: var(--space-2xs);
  }
  
  .author-name a {
    color: hsl(var(--txt));
    text-decoration: none;
    transition: color var(--transition-ease-fast);
  }
  
  .author-name a:hover {
    color: hsl(var(--accent));
    text-decoration: underline;
  }
  
  .post-meta {
    display: flex;
    gap: var(--space-sm);
    font-size: var(--fs-sm);
    color: hsl(var(--txt) / 0.7);
  }
  
  .post-date, .reading-time {
    display: flex;
    align-items: center;
    gap: var(--space-2xs);
  }
  
  .featured-image-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto var(--space-xl);
    padding: 0 var(--space-md);
  }
  
  .featured-image {
    width: 100%;
    height: auto;
    border-radius: var(--radius-lg);
    object-fit: cover;
    aspect-ratio: 16 / 9;
    box-shadow: var(--shadow-md);
  }
  
  /* Responsive styles */
  @media (max-width: 768px) {
    .post-header {
      padding: var(--space-lg) var(--space-md);
    }
    
    h1 {
      font-size: var(--fs-2xl);
    }
    
    .post-description {
      font-size: var(--fs-md);
    }
  }
  
  @media (max-width: 480px) {
    .post-meta {
      flex-direction: column;
      gap: var(--space-2xs);
    }
    
    .featured-image {
      border-radius: var(--radius-md);
    }
  }
</style>