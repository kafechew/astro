---
// src/components/Auth/LoginForm.astro
---

<div class="auth-page">
  <div class="auth-container">
    <div class="auth-content">
      <div class="auth-header">
        <h1>Welcome Back</h1>
        <p>Sign in to your account to continue</p>
      </div>
      
      <form id="loginForm" class="auth-form">
        <div class="form-group">
          <label for="email">Email or Username</label>
          <div class="input-wrapper">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
              <circle cx="12" cy="7" r="4"></circle>
            </svg>
            <input type="text" id="email" name="email" placeholder="Enter your email or username" required />
          </div>
        </div>
        
        <div class="form-group">
          <div class="label-row">
            <label for="password">Password</label>
            <a href="/forgot-password" class="forgot-password">Forgot password?</a>
          </div>
          <div class="input-wrapper">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
              <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
            </svg>
            <input type="password" id="password" name="password" placeholder="Enter your password" required />
            <button type="button" class="toggle-password" aria-label="Toggle password visibility">
              <svg class="show-password" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                <circle cx="12" cy="12" r="3"></circle>
              </svg>
              <svg class="hide-password" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path>
                <line x1="1" y1="1" x2="23" y2="23"></line>
              </svg>
            </button>
          </div>
        </div>
        
        <div class="form-group remember-me">
          <label class="checkbox-container">
            <input type="checkbox" id="remember" name="remember" />
            <span class="checkmark"></span>
            Remember me
          </label>
        </div>
        
        <div class="form-group">
          <button type="submit" class="submit-button">
            <span>Sign In</span>
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path>
              <polyline points="10 17 15 12 10 7"></polyline>
              <line x1="15" y1="12" x2="3" y2="12"></line>
            </svg>
          </button>
        </div>
        
        <div id="message" class="form-message"></div>
      </form>
      
      <div class="auth-divider">
        <span>OR</span>
      </div>
      
      <div class="social-login">
        <button type="button" class="social-button google">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24">
            <path d="M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z" fill="currentColor"/>
          </svg>
          Sign in with Google
        </button>
      </div>
      
      <div class="auth-footer">
        <p>Don't have an account? <a href="/register">Sign up</a></p>
      </div>
    </div>
    
    <div class="auth-image">
      <div class="image-overlay">
        <div class="brand-logo">
          <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 2a8 8 0 0 1 8 8v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V10a8 8 0 0 1 8-8z"></path>
            <path d="M9 19h6"></path>
            <path d="M9 15h6"></path>
            <circle cx="12" cy="7" r="1"></circle>
          </svg>
          <span>HermitAI</span>
        </div>
        <div class="image-content">
          <h2>Your Personal AI Twin</h2>
          <p>Experience the next generation of AI assistants that understand your knowledge and adapt to your needs.</p>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const form = document.getElementById('loginForm');
  const messageDiv = document.getElementById('message');
  const togglePasswordButton = document.querySelector('.toggle-password');
  const passwordInput = document.getElementById('password');

  // Toggle password visibility
  if (togglePasswordButton && passwordInput) {
    togglePasswordButton.addEventListener('click', () => {
      const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
      passwordInput.setAttribute('type', type);
      togglePasswordButton.classList.toggle('show');
    });
  }

  // Form submission
  if (form) {
    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      
      if (!messageDiv) return;
      
      // Clear previous messages
      messageDiv.textContent = '';
      messageDiv.className = 'form-message';
      
      // Disable submit button and show loading state
      const submitButton = form.querySelector('button[type="submit"]');
      if (submitButton) {
        const originalText = submitButton.innerHTML;
        submitButton.disabled = true;
        submitButton.innerHTML = `
          <svg class="animate-spin -ml-1 mr-2 h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Signing in...
        `;
      }

      const emailInput = document.getElementById('email') as HTMLInputElement;
      const passwordInput = document.getElementById('password') as HTMLInputElement;
      const rememberInput = document.getElementById('remember') as HTMLInputElement;
      
      if (!emailInput || !passwordInput) return;
      
      const identifier = emailInput.value.trim();
      const password = passwordInput.value;
      const remember = rememberInput ? rememberInput.checked : false;

      try {
        const response = await fetch('/api/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ identifier, password, remember }),
        });

        const data = await response.json();

        if (response.ok) {
          messageDiv.textContent = data.message || 'Login successful!';
          messageDiv.classList.add('success');
          
          // Redirect after a short delay
          setTimeout(() => {
            window.location.href = data.redirectUrl || '/ai';
          }, 500);
        } else {
          messageDiv.textContent = data.message || 'Login failed. Please check your credentials.';
          messageDiv.classList.add('error');
          
          // Re-enable submit button
          if (submitButton) {
            submitButton.disabled = false;
            submitButton.innerHTML = originalText;
          }
        }
      } catch (error) {
        console.error('Login error:', error);
        messageDiv.textContent = 'An error occurred during login. Please try again.';
        messageDiv.classList.add('error');
        
        // Re-enable submit button
        if (submitButton) {
          submitButton.disabled = false;
          submitButton.innerHTML = originalText;
        }
      }
    });
  }
  
  // Social login (placeholder)
  const socialButtons = document.querySelectorAll('.social-button');
  socialButtons.forEach(button => {
    button.addEventListener('click', () => {
      alert('Social login is not implemented yet.');
    });
  });
</script>

<style>
  .auth-page {
    min-height: calc(100vh - 120px); /* Adjust based on your header/footer height */
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-md);
  }
  
  .auth-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    width: 100%;
    max-width: 1200px;
    min-height: 600px;
    background-color: hsl(var(--bkg));
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: var(--shadow-lg);
  }
  
  .auth-content {
    padding: var(--space-xl);
    display: flex;
    flex-direction: column;
    justify-content: center;
    max-width: 500px;
    margin: 0 auto;
    width: 100%;
  }
  
  .auth-header {
    margin-bottom: var(--space-lg);
  }
  
  .auth-header h1 {
    font-size: var(--fs-3xl);
    color: hsl(var(--txt));
    margin-bottom: var(--space-xs);
  }
  
  .auth-header p {
    color: hsl(var(--txt) / 0.7);
    font-size: var(--fs-lg);
  }
  
  .auth-form {
    width: 100%;
  }
  
  .form-group {
    margin-bottom: var(--space-md);
  }
  
  .form-group label {
    display: block;
    margin-bottom: var(--space-xs);
    font-weight: 500;
    color: hsl(var(--txt));
  }
  
  .label-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-xs);
  }
  
  .forgot-password {
    font-size: var(--fs-sm);
    color: hsl(var(--accent));
    text-decoration: none;
  }
  
  .forgot-password:hover {
    text-decoration: underline;
  }
  
  .input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }
  
  .input-wrapper svg {
    position: absolute;
    left: var(--space-sm);
    color: hsl(var(--txt) / 0.5);
  }
  
  .input-wrapper input {
    width: 100%;
    padding: var(--space-sm) var(--space-sm) var(--space-sm) calc(var(--space-sm) * 2 + 18px);
    border: 1px solid hsl(var(--txt) / 0.2);
    border-radius: var(--radius-md);
    background-color: hsl(var(--bkg));
    color: hsl(var(--txt));
    font-size: var(--fs-md);
    transition: border-color var(--transition-ease-fast), box-shadow var(--transition-ease-fast);
  }
  
  .input-wrapper input:focus {
    outline: none;
    border-color: hsl(var(--accent));
    box-shadow: 0 0 0 2px hsl(var(--accent) / 0.2);
  }
  
  .toggle-password {
    position: absolute;
    right: var(--space-sm);
    background: none;
    border: none;
    color: hsl(var(--txt) / 0.5);
    cursor: pointer;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .toggle-password .hide-password {
    display: none;
  }
  
  .toggle-password.show .show-password {
    display: none;
  }
  
  .toggle-password.show .hide-password {
    display: block;
  }
  
  .remember-me {
    display: flex;
    align-items: center;
  }
  
  .checkbox-container {
    display: flex;
    align-items: center;
    cursor: pointer;
    font-size: var(--fs-sm);
    color: hsl(var(--txt) / 0.8);
    user-select: none;
  }
  
  .checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  .checkmark {
    position: relative;
    display: inline-block;
    height: 18px;
    width: 18px;
    margin-right: var(--space-xs);
    background-color: hsl(var(--bkg));
    border: 1px solid hsl(var(--txt) / 0.3);
    border-radius: var(--radius-sm);
    transition: all var(--transition-ease-fast);
  }
  
  .checkbox-container:hover input ~ .checkmark {
    border-color: hsl(var(--txt) / 0.5);
  }
  
  .checkbox-container input:checked ~ .checkmark {
    background-color: hsl(var(--accent));
    border-color: hsl(var(--accent));
  }
  
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  .checkbox-container input:checked ~ .checkmark:after {
    display: block;
  }
  
  .checkbox-container .checkmark:after {
    left: 6px;
    top: 2px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
  }
  
  .submit-button {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-sm);
    padding: var(--space-sm) var(--space-md);
    background-color: hsl(var(--accent));
    color: white;
    border: none;
    border-radius: var(--radius-md);
    font-size: var(--fs-md);
    font-weight: 500;
    cursor: pointer;
    transition: background-color var(--transition-ease-fast), transform var(--transition-ease-fast);
  }
  
  .submit-button:hover {
    background-color: hsl(var(--accent) / 0.9);
    transform: translateY(-1px);
  }
  
  .submit-button:active {
    transform: translateY(0);
  }
  
  .submit-button:disabled {
    background-color: hsl(var(--txt) / 0.3);
    cursor: not-allowed;
    transform: none;
  }
  
  .form-message {
    margin-top: var(--space-md);
    padding: var(--space-sm);
    border-radius: var(--radius-md);
    font-size: var(--fs-sm);
    text-align: center;
    display: none;
  }
  
  .form-message.success {
    display: block;
    background-color: hsl(142, 76%, 95%);
    color: hsl(142, 76%, 36%);
  }
  
  .form-message.error {
    display: block;
    background-color: hsl(0, 76%, 95%);
    color: hsl(0, 76%, 36%);
  }
  
  .auth-divider {
    position: relative;
    text-align: center;
    margin: var(--space-lg) 0;
  }
  
  .auth-divider::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 1px;
    background-color: hsl(var(--txt) / 0.1);
  }
  
  .auth-divider span {
    position: relative;
    padding: 0 var(--space-sm);
    background-color: hsl(var(--bkg));
    color: hsl(var(--txt) / 0.7);
    font-size: var(--fs-sm);
  }
  
  .social-login {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
  }
  
  .social-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-sm);
    padding: var(--space-sm);
    background-color: transparent;
    color: hsl(var(--txt));
    border: 1px solid hsl(var(--txt) / 0.2);
    border-radius: var(--radius-md);
    font-size: var(--fs-md);
    cursor: pointer;
    transition: background-color var(--transition-ease-fast);
  }
  
  .social-button:hover {
    background-color: hsl(var(--txt) / 0.05);
  }
  
  .social-button.google {
    color: #4285F4;
  }
  
  .auth-footer {
    margin-top: var(--space-lg);
    text-align: center;
    font-size: var(--fs-sm);
    color: hsl(var(--txt) / 0.7);
  }
  
  .auth-footer a {
    color: hsl(var(--accent));
    text-decoration: none;
    font-weight: 500;
  }
  
  .auth-footer a:hover {
    text-decoration: underline;
  }
  
  .auth-image {
    background-image: url('/images/login-bg.jpg');
    background-size: cover;
    background-position: center;
    position: relative;
  }
  
  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.4));
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: var(--space-xl);
    color: white;
  }
  
  .brand-logo {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    font-size: var(--fs-xl);
    font-weight: bold;
  }
  
  .image-content {
    max-width: 400px;
  }
  
  .image-content h2 {
    font-size: var(--fs-2xl);
    margin-bottom: var(--space-md);
  }
  
  .image-content p {
    font-size: var(--fs-lg);
    opacity: 0.9;
  }
  
  /* Responsive styles */
  @media (max-width: 992px) {
    .auth-container {
      grid-template-columns: 1fr;
      max-width: 600px;
    }
    
    .auth-image {
      display: none;
    }
  }
  
  @media (max-width: 480px) {
    .auth-page {
      padding: var(--space-sm);
    }
    
    .auth-content {
      padding: var(--space-lg) var(--space-md);
    }
    
    .auth-header h1 {
      font-size: var(--fs-2xl);
    }
    
    .auth-header p {
      font-size: var(--fs-md);
    }
  }
</style>